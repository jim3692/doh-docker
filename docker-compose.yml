version: "3.8"

services:
  reverse-proxy:
    image: caddy:2.7.4
    restart: unless-stopped
    entrypoint: ["caddy", "reverse-proxy", "--from", "${DOMAIN}", "--to", "http://doh-proxy:8053"]
    depends_on:
      - doh-proxy
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - 80:80
      - 443:443
    networks:
      doh:

  doh-proxy:
    image: satishweb/doh-server:v2.3.3-alpine
    restart: unless-stopped
    depends_on:
      - pihole
    environment:
      DEBUG: "0"
      UPSTREAM_DNS_SERVER: udp:${IP_pihole}:53
      DOH_HTTP_PREFIX: /dns-query
      DOH_SERVER_LISTEN: :8053
      DOH_SERVER_TIMEOUT: 10
      DOH_SERVER_TRIES: 3
      DOH_SERVER_VERBOSE: false
    ports:
      - 8053:8053
    networks:
      doh:

  dot-proxy:
    image: adguard/dnsproxy:v0.54.0
    restart: unless-stopped
    command: ["-u", "${IP_pihole}", "--tls-port=853", "-p", "0", "--tls-crt=${TLS_CRT_dot_proxy}", "--tls-key=${TLS_KEY_dot_proxy}"]
    depends_on:
      - pihole
    volumes:
      - ${CERTS_dot_proxy-./config/dot-proxy}:/cert
    ports:
      - 853:853/tcp
      - 853:853/udp
    networks:
      doh:

  pihole:
    image: pihole/pihole:2023.05.2
    restart: unless-stopped
    entrypoint: ["sh", "-c", "sed -i 's|\"{{PASSWORD}}\"|$PIHOLE_PASSWORD|' /etc/pihole/setupVars.conf && exec /s6-init"]
    depends_on:
      - adguard
    environment:
      - SKIPGRAVITYONBOOT=1
      - QUERY_LOGGING=false
    volumes:
      - ./config/pihole:/etc/pihole
      - pihole_dnsmasq:/etc/dnsmasq.d
    networks:
      doh:
        ipv4_address: ${IP_pihole}

  adguard:
    image: adguard/adguardhome:v0.107.38
    restart: unless-stopped
    entrypoint: ["sh", "-c", "sed -i 's|\"{{PASSWORD}}\"|$ADGUARD_PASSWORD|' /opt/adguardhome/conf/AdGuardHome.yaml && /opt/adguardhome/AdGuardHome --config /opt/adguardhome/conf/AdGuardHome.yaml"]
    volumes:
      - adguard_data:/opt/adguardhome/work
      - ./config/adguard:/opt/adguardhome/conf
    ports:
      - 127.0.0.1:3000:80
    networks:
      doh:
        ipv4_address: ${IP_adguard}

volumes:
  caddy_data:
  caddy_config:

  pihole_dnsmasq:

  adguard_data:

networks:
  doh:
    driver: bridge
    ipam:
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY}
